name: IPA Class-Dump and Swift-Dump

on:
  workflow_dispatch:
    inputs:
      ipa_url:
        description: 'URL to the IPA file'
        required: true
        type: string
      output_name:
        description: 'Output archive name'
        required: false
        default: 'dump_results'
        type: string

jobs:
  dump-headers:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install required tools
      run: |
        # 安装 class-dump
        brew install class-dump
        
        # 安装 SwiftDump (Python 工具)
        pip3 install swift-dump
        
        # 安装其他依赖
        pip3 install requests
        
    - name: Download IPA file
      run: |
        echo "Downloading IPA from ${{ github.event.inputs.ipa_url }}"
        curl -L -o app.ipa "${{ github.event.inputs.ipa_url }}"
        
    - name: Create output directory
      run: |
        mkdir -p output
        
    - name: Extract and analyze IPA
      run: |
        # 创建临时目录
        TEMP_DIR=$(mktemp -d)
        
        # 解压 IPA
        unzip -q app.ipa -d "$TEMP_DIR"
        
        # 查找 .app 包
        APP_BUNDLE=$(find "$TEMP_DIR" -name "*.app" -type d | head -n 1)
        if [ -z "$APP_BUNDLE" ]; then
          echo "Error: No .app bundle found"
          exit 1
        fi
        
        # 查找主二进制文件
        BINARY_NAME=$(defaults read "$APP_BUNDLE/Info.plist" CFBundleExecutable)
        BINARY_PATH="$APP_BUNDLE/$BINARY_NAME"
        
        if [ ! -f "$BINARY_PATH" ]; then
          echo "Error: No executable found"
          exit 1
        fi
        
        # 创建输出目录
        mkdir -p output/Objective-C
        mkdir -p output/Swift
        
        # 执行 class-dump (Objective-C)
        echo "Running class-dump..."
        class-dump -H -o output/Objective-C "$BINARY_PATH" || echo "class-dump failed or no Objective-C classes found"
        
        # 执行 Swift 符号提取
        echo "Extracting Swift symbols..."
        swift-dump "$BINARY_PATH" > output/Swift/swift_symbols.txt 2>/dev/null || echo "swift-dump failed"
        
        # 提取其他信息
        echo "Extracting framework references..."
        strings "$BINARY_PATH" | grep -E "UIKit|Foundation|Swift" > output/frameworks_references.txt
        
        # 清理临时文件
        rm -rf "$TEMP_DIR"
        
    - name: Package results
      run: |
        # 创建带有时间戳的归档文件
        TIMESTAMP=$(date +%Y%m%d_%H%M%S)
        ARCHIVE_NAME="${{ github.event.inputs.output_name }}_$TIMESTAMP.zip"
        zip -r "$ARCHIVE_NAME" output/
        
    - name: Upload results as artifact
      uses: actions/upload-artifact@v3
      with:
        name: dump-results
        path: ${{ github.event.inputs.output_name }}_*.zip
        
    - name: Clean up
      run: |
        rm -rf output app.ipa
